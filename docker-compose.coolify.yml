version: '3.8'

# Coolify Docker Compose Configuration
# This configuration is optimized for Coolify deployment
# Coolify will automatically add necessary Traefik labels for routing
# Documentation: See COOLIFY_DEPLOYMENT.md

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: backend
    restart: unless-stopped

    # Direct port mapping (bypasses Traefik, accessible at server-ip:8000)
    expose:
      - "8000"
    ports:
      - "8000:8000"

    environment:
      # Required: Set in Coolify UI Environment Variables
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:?Please set ANTHROPIC_API_KEY in Coolify environment variables}

      # Optional: Adjust based on server resources
      - MAX_CONCURRENT_JOBS=${MAX_CONCURRENT_JOBS:-3}

      # System configuration
      - PYTHONUNBUFFERED=1

    volumes:
      # Persistent storage for generated files
      - brand-data:/app/backend/brand-data
      - brief-outputs:/app/backend/brief-outputs
      - draft-outputs:/app/backend/draft-outputs
      - logs:/app/backend/logs

      # Read-only instruction and data files
      - ./backend/instructions:/app/backend/instructions:ro
      - ./backend/data:/app/backend/data:ro

      # Claude Code configuration (needs write access)
      - claude-config:/home/appuser/.claude

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    labels:
      - "coolify.managed=true"

    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 4G
        reservations:
          cpus: '2'
          memory: 2G

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: frontend
    restart: unless-stopped
    depends_on:
      - backend

    # Direct port mapping (bypasses Traefik, accessible at server-ip:3000)
    # Using port 3000 instead of 80 to avoid conflict with Traefik
    expose:
      - "80"
    ports:
      - "3000:80"

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

    labels:
      - "coolify.managed=true"

    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

volumes:
  brand-data:
  brief-outputs:
  draft-outputs:
  logs:
  claude-config:

# IMPORTANT DEPLOYMENT NOTES:
#
# This configuration uses DIRECT PORT MAPPING (bypasses Traefik proxy):
#
# 1. Access URLs:
#    - Backend API: http://YOUR-SERVER-IP:8000
#    - Frontend: http://YOUR-SERVER-IP:3000
#
# 2. Port configuration:
#    - Backend: Host port 8000 -> Container port 8000
#    - Frontend: Host port 3000 -> Container port 80
#
# 3. Environment variables (set in Coolify UI):
#    - ANTHROPIC_API_KEY: Required
#    - MAX_CONCURRENT_JOBS: Optional, defaults to 3
#
# 4. For SSL/Custom domains:
#    - Set up reverse proxy (nginx/caddy) on your server
#    - OR use Cloudflare tunnel
#    - OR configure Traefik manually with working routers
#
# 5. Firewall configuration:
#    - Open ports 8000 and 3000 on your server firewall
#    - Configure security groups if on cloud (AWS/GCP/Azure)
#
# For detailed deployment instructions, see COOLIFY_DEPLOYMENT.md
