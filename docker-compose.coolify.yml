version: '3.8'

# Coolify Docker Compose Configuration
# This configuration is optimized for Coolify deployment
# Coolify will automatically add necessary Traefik labels for routing
# Documentation: See COOLIFY_DEPLOYMENT.md

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    restart: unless-stopped

    # Expose port internally (Coolify will detect this)
    expose:
      - "8000"

    environment:
      # Required: Set in Coolify UI Environment Variables
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:?Please set ANTHROPIC_API_KEY in Coolify environment variables}

      # Optional: Adjust based on server resources
      - MAX_CONCURRENT_JOBS=${MAX_CONCURRENT_JOBS:-3}

      # System configuration
      - PYTHONUNBUFFERED=1

    volumes:
      # Persistent storage for generated files
      - brand-data:/app/backend/brand-data
      - brief-outputs:/app/backend/brief-outputs
      - draft-outputs:/app/backend/draft-outputs
      - logs:/app/backend/logs

      # Read-only instruction and data files
      - ./backend/instructions:/app/backend/instructions:ro
      - ./backend/data:/app/backend/data:ro

      # Claude Code configuration (needs write access)
      - claude-config:/home/appuser/.claude

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    labels:
      - "coolify.managed=true"

    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 4G
        reservations:
          cpus: '2'
          memory: 2G

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    restart: unless-stopped
    depends_on:
      - backend

    # Expose port internally (Coolify will detect this)
    expose:
      - "80"

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

    labels:
      - "coolify.managed=true"

    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

volumes:
  brand-data:
  brief-outputs:
  draft-outputs:
  logs:
  claude-config:

# IMPORTANT DEPLOYMENT NOTES:
#
# 1. DO NOT add 'ports:' to services - Coolify's Traefik proxy handles all routing
# 2. DO NOT add custom Traefik labels - Coolify generates them automatically
# 3. Configure domains in Coolify UI after deployment:
#    - Frontend: Set port to 80, assign domain
#    - Backend: Set port to 8000, assign domain
# 4. Environment variables:
#    - ANTHROPIC_API_KEY: Required, set in Coolify UI
#    - MAX_CONCURRENT_JOBS: Optional, defaults to 3
# 5. Coolify will automatically:
#    - Create and manage Docker networks
#    - Configure Traefik routing and SSL certificates
#    - Handle health checks and container restarts
#    - Manage persistent volumes
#
# For detailed deployment instructions, see COOLIFY_DEPLOYMENT.md
